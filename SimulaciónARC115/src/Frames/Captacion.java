/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Frames;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import Registros.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.ImageObserver;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.AttributedCharacterIterator;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
/**
 *
 * @author User
 */
public class Captacion extends JFrame{

    /**
     * Creates new form Captacion
     */
    public Captacion() {
        initComponents();
        this.setLocationRelativeTo(null);
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon imagen = new ImageIcon(this.getClass().getResource("/Img/fondo.jpg"));
        JLabel label = new JLabel();
        label.setIcon(imagen);
        getLayeredPane().add(label, JLayeredPane.FRAME_CONTENT_LAYER);
        label.setBounds(0, 0, imagen.getIconWidth(), imagen.getIconHeight());
        setResizable(false);
        setSize(1400, 800);
        setLocationRelativeTo(null);
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        direccionField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        iniciarSimulacion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        marField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        mbrField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        irField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Inicio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Introduzca una dirección de memoria (decimal)");

        direccionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Program Counter (PC):");

        iniciarSimulacion.setText("Iniciar simulación");
        iniciarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarSimulacionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Memory Address Register (MAR):");

        marField.setEditable(false);
        marField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marFieldActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Memory Buffer Register (MBR): ");

        mbrField.setEditable(false);
        mbrField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbrFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Instruction Register (IR):");

        irField.setEditable(false);
        irField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CICLO DE CAPTACIÓN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mbrField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(irField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel6))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(42, 42, 42)
                                .addComponent(direccionField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(iniciarSimulacion)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(137, 137, 137))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(direccionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(marField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mbrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(irField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniciarSimulacion)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void paint(Graphics g){
        super.paint(g);
        g.setColor(Color.GRAY);
        g.fillRect(500, 50, 800, 600);
        g.setColor(Color.white);
        g.fillRect(1000, 100, 35, 550);
        g.fillRect(1070, 100, 35, 550);
        g.fillRect(1140, 100, 35, 550);
        g.setColor(Color.blue);
        g.drawString("BusDi", 1000, 90);
        g.drawString("BusD", 1070, 90);
        g.drawString("BusC", 1140, 90);
        g.setColor(Color.WHITE);
        g.fillRect(1200, 90, 95, 400);
        g.setColor(Color.black);
        g.drawString("Memoria P.", 1215, 102);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InterfaceDeCodigo cod = new InterfaceDeCodigo();
        cod.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void direccionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionFieldActionPerformed

    private void iniciarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarSimulacionActionPerformed
         Hilo h = new Hilo();
         h.start();
         
    }//GEN-LAST:event_iniciarSimulacionActionPerformed

    private void marFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void mbrFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbrFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbrFieldActionPerformed

    private void irFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_irFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Captacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Captacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Captacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Captacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Captacion().setVisible(true);
            }
        });
    }

    
    private class Hilo extends Thread{
        public void run(){
            ProgramCounter pc = new ProgramCounter();
            MemoryBufferRegister mbr = new MemoryBufferRegister();
            MemoryAddressRegister mar = new MemoryAddressRegister();
            MemoriaPrincipal mp = new MemoriaPrincipal();
            InstructionRegister ir = new InstructionRegister();
            Graphics g= getGraphics();
            Graphics g1 = getGraphics();

            mp.setN(inicializar());
            boolean auxMAR = false;
            try{
            if (direccionField.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "El campo está vacío, por favor ingrese una dirección. :V", "error", JOptionPane.ERROR_MESSAGE);
                direccionField.setText("");
            }else{
                pc.setDireccion(direccionField.getText());
                if (pc.verificar(pc.getDireccion())){
                    pc.decimalABinario(pc.getDireccion());
                    direccionField.setText(pc.getDireccion());
                    auxMAR = true;
                    g.setColor(Color.blue);
                    g.fillRect(500,150,150,50);
                    g.setColor(Color.green);
                    g.drawRect(500, 150, 150, 50);
                    g.setColor(Color.yellow);
                    g.drawString("Program Counter", 502, 170);
                    g.drawString(pc.getDireccion(), 502, 185);
                        
            
                }else{
                    JOptionPane.showMessageDialog(null, "El campo es una cadena o un decimal no un entero, por favor ingrese un numero entero. :V", "error", JOptionPane.ERROR_MESSAGE);
                    direccionField.setText("");
                    auxMAR = false;
                }
            }
            
            Thread.sleep(1000);
            }catch(InterruptedException ex1){
                Logger.getLogger(Captacion.class.getName()).log(Level.SEVERE, null, ex1);
            }
            if(auxMAR){
                mar.setPc(pc);
                    try {
                        
                        g.setColor(Color.blue);
                        g.drawRect(500, 150, 150, 50);
                        g1.setColor(Color.orange);
                        g1.fillRect(653, 165, 100, 25);
                        g1.setColor(Color.green);
                        g1.drawRect(653, 165, 100, 25);
                        g1.setColor(Color.blue);
                        g1.fillRect(753, 150, 150, 50);
                        g1.setColor(Color.green);
                        g1.drawRect(753, 150, 150, 50);
                        g.setColor(Color.yellow);
                        g.drawString("Memory Address Register", 755, 165);
                        g.drawString( mar.getPc().getDireccion(), 755, 180);
                        marField.setText(mar.getPc().getDireccion());
                        
                        Thread.sleep(1000);
                        g.setColor(Color.blue);
                        g.drawRect(753, 150, 150, 50);
                        g.setColor(Color.orange);
                        g.drawRect(653, 165, 100, 25);
                        g.setColor(Color.orange);
                        
                        g.fillRect(903, 165, 97, 25);
                        
                        g.setColor(Color.green);
                        g.drawRect(903, 165, 97, 25);
                        g.drawRect(1000, 100, 35, 550);
                        
                        Thread.sleep(1000);
                        g.setColor(Color.orange);
                        g.drawRect(903, 165, 97, 25);
                        g.setColor(Color.orange);
                        g.fillRect(1035, 190, 165, 25);
                        g.setColor(Color.green);
                        g.drawRect(1035, 190, 165, 25);
                        
                        g.setColor(Color.white);
                        g.drawRect(1000, 100, 35, 550);
                        g.setColor(Color.green);
                        g.drawRect(1200, 90, 95, 400);
                        Thread.sleep(1000);
                       
                
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Captacion.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    
                    try{
                        g.setColor(Color.orange);
                        g.drawRect(1035, 190, 165, 25);
                        g.setColor(Color.white);
                        g.drawRect(1200, 90, 95, 400);
                        g.setColor(Color.orange);
                        g.fillRect(1105, 250, 95, 25);
                        g.setColor(Color.green);
                        g.drawRect(1105, 250, 95, 25);
                        g.setColor(Color.green);
                        
                        g.drawRect(1070, 100, 35, 550);
                        
                        Thread.sleep(1000);         
                        g.setColor(Color.white);
                        g.drawRect(1070, 100, 35, 550);                       
                        g.setColor(Color.orange);
                        g.drawRect(1105, 250, 95, 25);
                        g.fillRect(903, 260, 167, 25);
                        g.setColor(Color.green);
                        g.drawRect(903, 260, 167, 25);
                        g.setColor(Color.blue);
                        g.drawString(pc.getDireccion(), 502, 185);
                        g.setColor(Color.white);
                        g.drawRect(1070, 100, 35, 550);
                        mbrField.setText(mp.buscar(mbr.binarioDecimal(marField.getText()) + 1));
                        g.setColor(Color.blue);
                        g.fillRect(753, 250, 150, 50);
                        g.setColor(Color.yellow);
                        g.drawString("Memory Buffer Register", 753, 265); 
                        g.drawString(mbrField.getText(), 753, 280);
                        g.setColor(Color.green);
                        g.drawRect(753, 250, 150, 50);
                        mbr.setInstruccion(mbrField.getText());
                        pc.incrementar(pc.getDireccion());
                        direccionField.setText(pc.getDireccion());  
                        g.setColor(Color.yellow);
                        g.drawString(pc.getDireccion(), 502, 185);
                        g.setColor(Color.orange);
                        g.fillRect(1035, 190, 165, 25);
                        Thread.sleep(1000);
                    }catch (InterruptedException ex2) {
                        Logger.getLogger(Captacion.class.getName()).log(Level.SEVERE, null, ex2);
                    } 
                    
                    try{
                        g.setColor(Color.orange);
                        g.fillRect(903, 260, 167, 26);
                        g.setColor(Color.blue);
                        g.drawRect(753, 250, 150, 50);
                        g.fillRect(500, 250, 150, 50);
                        g.setColor(Color.green);
                        g.drawRect(500, 250, 150, 50);
                        g.setColor(Color.yellow);
                        g.drawString("Instruction Register", 503, 264);
                        g.setColor(Color.orange);
                        g.fillRect(650, 260, 102, 25);
                        g.setColor(Color.green);
                        g.drawRect(650, 260, 102, 25);
                        ir.setMbr(mbr);
                        irField.setText(ir.getMbr().getInstruccion());
                        g.setColor(Color.yellow);
                        g.drawString(irField.getText(), 503, 278);
                        Thread.sleep(1000);
                        g.setColor(Color.orange);
                        g.drawRect(650, 260, 102, 25);
                        g.setColor(Color.blue);
                        g.drawRect(500, 250, 150, 50);
                        Thread.sleep(1000);
                        Ejecucion e = new Ejecucion();
                        e.setVisible(true);
                        e.registerIR.setText(irField.getText());
                        dispose();
                        Thread.sleep(1000);
                    }catch (InterruptedException ex2) {
                        Logger.getLogger(Captacion.class.getName()).log(Level.SEVERE, null, ex2);
                    }
                    
            }
            
            
           
            }
        
        
    }
//***************************************MÉTODO PARA CARGAR MEMORIA****************************************************
    private ArrayList<String> inicializar(){
        ArrayList<String> array = new ArrayList<String>();
        
        File file = null;
        FileReader read = null;
        BufferedReader buff = null;
        
        try{
            file = new File("src/Datos/MemoriaPrincipal");
            read = new FileReader(file);
            buff = new BufferedReader(read);
            String linea;
            while((linea = buff.readLine()) != null ){
                array.add(linea);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try{
                if (null != read){
                    read.close();
                }
            }catch(Exception e2){
                e2.printStackTrace();
            }
        }
        return array;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField direccionField;
    private javax.swing.JButton iniciarSimulacion;
    private javax.swing.JTextField irField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField marField;
    private javax.swing.JTextField mbrField;
    // End of variables declaration//GEN-END:variables
}
